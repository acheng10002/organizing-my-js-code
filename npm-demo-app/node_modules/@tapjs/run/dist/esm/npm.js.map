{"version":3,"file":"npm.js","sourceRoot":"","sources":["../../src/npm.ts"],"names":[],"mappings":"AAAA;;GAEG;AAGH,OAAO,EAAE,eAAe,EAAE,MAAM,kBAAkB,CAAA;AAClD,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAA;AAE9C,MAAM,UAAU,GAAG,MAAM,CAAC,WAAW,CACnC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAC/D,CAAA;AAED;;GAEG;AACH,MAAM,CAAC,MAAM,KAAK,GAAG,CAAC,IAAc,EAAE,MAAoB,EAAE,EAAE,CAC5D,SAAS,CAAC,KAAK,EAAE,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,EAAE;IACtD,GAAG,EAAE,UAAU;IACf,QAAQ,EAAE,MAAM;IAChB,GAAG,EAAE,MAAM,CAAC,OAAO;CACpB,CAAC,CAAA;AAEJ;;GAEG;AACH,MAAM,KAAK,GAAG,CACZ,IAAc,EACd,MAAoB,EACpB,EASa,EACb,EAAE,CACF,eAAe,CACb,KAAK,EACL,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,EACrC;IACE,GAAG,EAAE,UAAU;IACf,GAAG,EAAE,MAAM,CAAC,OAAO;CACpB,EACD,EAAE,CACH,CAAA;AAEH,iBAAiB;AACjB,MAAM,KAAK,GAAG,CAAC,YAAY,EAAE,kBAAkB,EAAE,eAAe,CAAC,CAAA;AACjE,MAAM,CAAC,MAAM,OAAO,GAAG,KAAK,EAC1B,IAAc,EACd,MAAoB,EACpB,EAAE;IACF,MAAM,IAAI,GAAG,CAAC,SAAS,EAAE,GAAG,KAAK,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,CAAA;IACzD,MAAM,IAAI,OAAO,CAAO,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;QACnC,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE;YACnC,8BAA8B;YAC9B,IAAI,IAAI,IAAI,MAAM,EAAE;gBAClB,GAAG,CACD,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAC7D,CAAA;gBACD,OAAM;aACP;YACD,GAAG,EAAE,CAAA;YACL,cAAc;YACd,OAAO,KAAK,CAAA;QACd,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,SAAS,GAAG,KAAK,EAC5B,IAAc,EACd,MAAoB,EACpB,EAAE;IACF,MAAM,IAAI,GAAG,CAAC,IAAI,EAAE,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC,CAAA;IACtC,MAAM,IAAI,OAAO,CAAO,GAAG,CAAC,EAAE;QAC5B,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE;YACnC,8BAA8B;YAC9B,GAAG,EAAE,CAAA;YACL,OAAO,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAA;QAC3C,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAA","sourcesContent":["/**\n * some utilities for interfacing with npm in the `tap plugin` command\n */\n\nimport { LoadedConfig } from '@tapjs/config'\nimport { foregroundChild } from 'foreground-child'\nimport { spawnSync } from 'node:child_process'\n\nconst npmFreeEnv = Object.fromEntries(\n  Object.entries(process.env).filter(([k]) => !/^npm_/i.test(k))\n)\n\n/**\n * Run an npm command in the background, returning the result\n */\nexport const npmBg = (args: string[], config: LoadedConfig) =>\n  spawnSync('npm', ['--prefix', config.globCwd, ...args], {\n    env: npmFreeEnv,\n    encoding: 'utf8',\n    cwd: config.globCwd,\n  })\n\n/**\n * Run an npm command in the foreground\n */\nconst npmFg = (\n  args: string[],\n  config: LoadedConfig,\n  cb: (\n    code: number | null,\n    signal: NodeJS.Signals | null\n  ) =>\n    | number\n    | false\n    | void\n    | NodeJS.Signals\n    | Promise<number | false | void | NodeJS.Signals | undefined>\n    | undefined\n) =>\n  foregroundChild(\n    'npm',\n    ['--prefix', config.globCwd, ...args],\n    {\n      env: npmFreeEnv,\n      cwd: config.globCwd,\n    },\n    cb\n  )\n\n// arguments when\nconst quiet = ['--no-audit', '--loglevel=error', '--no-progress']\nexport const install = async (\n  pkgs: string[],\n  config: LoadedConfig\n) => {\n  const args = ['install', ...quiet, '--save-dev', ...pkgs]\n  await new Promise<void>((res, rej) => {\n    npmFg(args, config, (code, signal) => {\n      // allow error exit to proceed\n      if (code || signal) {\n        rej(\n          Object.assign(new Error('install failed'), { code, signal })\n        )\n        return\n      }\n      res()\n      // do not exit\n      return false\n    })\n  })\n}\n\nexport const uninstall = async (\n  pkgs: string[],\n  config: LoadedConfig\n) => {\n  const args = ['rm', ...quiet, ...pkgs]\n  await new Promise<void>(res => {\n    npmFg(args, config, (code, signal) => {\n      // allow error exit to proceed\n      res()\n      return code || signal ? undefined : false\n    })\n  })\n}\n"]}